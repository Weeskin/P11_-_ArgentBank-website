swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account:
    post:
      tags:
        - User Account Module
      summary: Create account
      description: API for account creation
      parameters:
        - in: body
          name: body
          description: Account creation Payload
          required: true
          schema:
            $ref: '#/definitions/Account'
      produces:
        - application/json
      responses:
        '200':
          description: Account created Successfully
          schema:
            $ref: '#/definitions/AccountResponse'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error
  /user/{:id}/accounts:
    get:
      tags:
        - User Account Module
      summary: Get user's account
      description: API for getting user's account
      parameters:
        - type: string
          in: path
          name: :id
          description: User Account ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Accounts got Successfully
          schema:
            $ref: '#/definitions/UserAccounts'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error
  /user/account/{:id}:
    get:
      tags:
        - User Account Module
      summary: Get user's account
      description: API for getting user's account
      parameters:
        - type: string
          in: path
          name: :id
          description: User Account ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Account got Successfully
          schema:
            $ref: '#/definitions/AccountResponse'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error
  /user/account/transaction:
    post:
      tags:
        - User Account Transactions Module
      summary: Create user's account transaction
      description: API for creating user's account transaction
      parameters:
        - in: body
          name: body
          description: Transaction creation Payload
          required: true
          schema:
            $ref: '#/definitions/UserAccountTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction created Successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error
  /user/account/{:id}/transactions:
    get:
      tags:
        - User Account Transactions Module
      summary: Get one user account's transactions
      description: API for getting one user account's transactions
      parameters:
        - type: string
          in: path
          name: :id
          description: User Account ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transactions got Successfully
          schema:
            $ref: '#/definitions/UserAccountTransactions'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error
  /user/account/transaction/{:id}:
    get:
      tags:
        - User Account Transactions Module
      summary: Get one user account's particular transaction
      description: API for getting one user account's particular transaction
      parameters:
        - type: string
          in: path
          name: :id
          description: Transaction ID
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction got Successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error
  /user/account/updatetransaction:
    put:
      tags:
        - User Account Transactions Module
      summary: Update one user account's particular transaction
      description: API for updateing one user account's particular transaction
      parameters:
        - in: body
          name: body
          description: Transaction update Payload
          required: true
          schema:
            $ref: '#/definitions/UpdateTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated Successfully
          schema:
            $ref: '#/definitions/TransactionResponse'
        '400':
          description: Invalid Field
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    properties:
          accountType:
            type: number
            description: Type of account
          userId: 
            type : string
            description: user id
          creationDate:
            type: string
            description: creation date
          name: 
            type: string
            description: Account name
          balance: 
            type: number
            description: Account balance
  AccountResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          _id:
            type: string
          accountType:
            type: number
          userId: 
            type : string
          creationDate:
            type: string
          name: 
            type: string
          balance: 
            type: number
  UserAccounts:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Success !
      body:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
            accountType:
              type: number
            userId: 
              type : string
            creationDate:
              type: string
            name: 
              type: string
            balance: 
              type: number
  UserAccountTransaction:
    properties:
        accountId: 
              type: string
        creationDate:
              type: string
        description: 
              type: string
        amount: 
              type: number
        balance: 
              type: number
        transactionType: 
              type: number
        transactionCategory: 
              type: number
        notes: 
              type: string
  TransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          _id: 
                type: string
          accountId: 
                type: string
          creationDate:
                type: string
          description: 
                type: string
          amount: 
                type: number
          balance: 
                type: number
          transactionType: 
                type: number
          transactionCategory: 
                type: number
          notes: 
                type: string
  UserAccountTransactions:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: Success !
      body:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
            accountId: 
                  type: string
            creationDate:
                  type: string
            description: 
                  type: string
            amount: 
                  type: number
            balance: 
                  type: number
            transactionType: 
                  type: number
            transactionCategory: 
                  type: number
            notes: 
                  type: string
  UpdateTransaction:
    properties:
        _id: 
              type: string
        transactionCategory: 
              type: number
        notes: 
              type: string